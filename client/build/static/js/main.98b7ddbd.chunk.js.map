{"version":3,"sources":["serviceWorker.js","utils/setAuthToken.js","state/actions/types.js","state/reducers/authReducers.js","state/reducers/errorReducers.js","state/reducers/applicationReducers.js","state/reducers/index.js","state/store.js","state/actions/authActions.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/applicationList/applicationList.js","state/actions/applicationActions.js","components/ListHead/ListHead.js","components/TrackHub/TrackHub.js","components/NewApplication/NewApplication.js","App.js","index.js","assests/edit.svg","assests/refresh.svg","assests/add-button.svg","assests/paper-plane.svg","assests/error.svg"],"names":["Boolean","window","location","hostname","match","setAuthToken","token","axios","defaults","headers","common","ADD_APPLICATION","DATA_LOADED","DELETE_APPLICATION","isEmpty","require","initialState","isAuthenticated","user","loading","applications","applicationReducer","state","arguments","length","undefined","action","type","Object","assign","concat","payload","objectSpread","filter","item","console","log","_id","combineReducers","auth","errors","application","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","Navbar","this","props","privateNavigation","react_default","a","createElement","id","class","Link","to","className","style","fontFamily","Component","connect","Landing","height","width","borderRadius","letterSpacing","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","Route","render","Redirect","Dashboard","onLogoutClick","split","onClick","ApplicationList","currentApplication","editable","removeInput","handleApplicationClick","bind","assertThisInitialized","handleApplicationEdit","saveApplicationChanges","options","applicationID","userID","updateApplication","event","newValue","companyName","currentApplicationStatus","dateApplied","lastUpdate","idsToDelete","deleteApplication","_this2","selectStatusArea","editableArea","src","updateIcon","title","alt","placeholder","mainContent","editIcon","delete","message","removedID","newApplication","put","ListHead","TrackHub","getAllApplications","map","el","joined","_this3","addNewButton","addIcon","appList","components_ListHead_ListHead","key","applicationList_applicationList","get","NewApplication","addApplication","handleNewApplication","icons","save","saveIcon","close","closeIcon","newApplicationArea","jwtToken","currentTime","Date","now","exp","href","App","es","BrowserRouter","layout_Navbar","exact","path","Switch","private_route_PrivateRoute","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.98b7ddbd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_APPLICATION = \"ADD_APPLICATION\";\nexport const DATA_LOADED = \"DATA_LOADED\";\nexport const DELETE_APPLICATION = \"DELETE_APPLICATION\";\nexport const SET_CURRENT_APPLICATIONS = \"SET_CURRENT_APPLICATIONS\";\nexport const UPDATE_APPLICATION = \"UPDATE_APPLICATION\";","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\n  const isEmpty = require(\"is-empty\");\n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { ADD_APPLICATION, DATA_LOADED, DELETE_APPLICATION, SET_CURRENT_APPLICATIONS } from '../actions/types';\n\nconst initialState = {\n    applications: []\n  };\n\n  function applicationReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_APPLICATION:\n            return Object.assign({}, state, {\n                applications: state.applications.concat(action.payload)\n            })\n        case DATA_LOADED:\n            return Object.assign({}, state, {\n                applications: state.applications.concat(action.payload)\n            })\n        case DELETE_APPLICATION:\n            return {\n                ...state,\n                applications: state.applications.filter(item => {\n                    console.log(item)\n                    return item._id !== action.payload\n                })\n            };\n    }\n    return state;\n  };\n\nexport default applicationReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport applicationReducer from './applicationReducers';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  application: applicationReducer\n});","// import rootReducer from \"../reducers/index\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Navbar extends Component {\n  componentDidMount() {\n    console.log(this.props)\n  }\n  render() {\n    const privateNavigation = (\n      <ul id=\"nav-mobile\" class=\"right \">\n              <li>\n                <Link\n                  to=\"/dashboard\"\n                  className=\"black-text\">\n                  {/* <i className=\"material-icons\">code</i> */}\n                  Dashboard\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/track-hub\"\n                  className=\"black-text\">\n                  {/* <i className=\"material-icons\">code</i> */}\n                  Hub\n                </Link>\n              </li>\n            </ul>\n    )\n\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/track-hub\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo left black-text\">\n              <i className=\"material-icons\">code</i>\n              Track Hub\n            </Link>\n            {this.props.auth.isAuthenticated ? privateNavigation : null}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { \n      auth: state.auth\n   };\n};\n\nexport default connect(mapStateToProps)(Navbar);","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Tracking</b> of your submitted job applications{\" \"}\n              <span style={{ fontFamily: \"monospace\" }}>CAN</span> be easy\n              with TrackHub\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Be confident and rock like a hurricane on the interview,<br />\n              While we will take care of everything else.<br /> \n              For <span style={{ fontFamily: \"monospace\" }}>FREE</span>\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n              className=\"btn btn-large waves-effect white hoverable black-text\">\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../state/actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n      // If logged in and user navigates to Register page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history); \n    };\n\n\n    render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}/>\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}/>\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}/>\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}/>\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button style={{width: \"150px\",borderRadius: \"3px\",letterSpacing: \"1.5px\",marginTop: \"1rem\"}}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n// withRouter() allow us to redirect within an action\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../state/actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n        email: \"\",\n        password: \"\",\n        errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n        email: this.state.email,\n        password: this.state.password\n    };\n\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}/>\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}/>\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button style={{width: \"150px\",borderRadius: \"3px\",letterSpacing: \"1.5px\",marginTop: \"1rem\"}}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../state/actions/authActions\";\n\nclass Dashboard extends Component {\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\nrender() {\n  const { user } = this.props.auth;\n\n  return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                Please feel free to go ahead and track your applications.\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n","import React, { Component } from 'react';\nimport { deleteApplication, updateApplication } from '../../state/actions/applicationActions';\nimport { connect } from \"react-redux\";\n\n// styles\nimport './applicationList.css';\nimport editIcon from '../../assests/edit.svg'\nimport updateIcon from '../../assests/refresh.svg'\n// import closeIcon from '../../assests/error.svg';\n\nclass ApplicationList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentApplication: { },\n            editable: false,\n            removeInput: ''\n        }\n        this.handleApplicationClick.bind(this)\n        this.handleApplicationEdit.bind(this)\n        this.saveApplicationChanges.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ currentApplication: this.props.application })\n    }\n\n    handleApplicationClick(action) {\n        switch (action) {\n            case 'editable':\n                this.setState({editable: true})\n                break;\n            case 'update':\n                this.setState({editable: false})\n                const applicationID = this.state.currentApplication._id;\n                const userID = this.props.userID;\n                \n                const options = {\n                    applicationID: applicationID,\n                    userID: userID,\n                    application: this.state.currentApplication\n                }\n                this.props.updateApplication(options)\n                break;\n        }\n    }\n\n    handleApplicationEdit(event, action) {\n        const newValue = event.target.value;\n\n        switch (action) {\n            case 'companyName':\n                this.setState({ currentApplication: { ...this.state.currentApplication, companyName: newValue} });\n                break;\n            case 'currentApplicationStatus':\n                this.setState({ currentApplication: { ...this.state.currentApplication, currentApplicationStatus: newValue} });\n                break;\n            case 'dateApplied':\n                this.setState({ currentApplication: { ...this.state.currentApplication, dateApplied: newValue} });\n                break;\n            case 'lastUpdate':\n                this.setState({ currentApplication: { ...this.state.currentApplication, lastUpdate: newValue} });\n                break;\n            case 'remove':\n                this.setState({ removeInput: newValue })\n                if (newValue === this.state.currentApplication.companyName) {\n                    const applicationID = this.state.currentApplication._id;\n                    const userID = this.props.userID;\n                    const idsToDelete = {\n                        applicationID: applicationID,\n                        userID: userID\n                    }\n                    this.props.deleteApplication(idsToDelete)\n                    this.setState({ currentApplication: {}, editable: false, removeInput: '' })\n                }\n                break;\n        }\n    }\n\n    saveApplicationChanges() {\n        this.setState({editable: false})\n    }\n\n    render() {\n        const selectStatusArea = (\n            <select className=\"applicationStatus\" name=\"applicationStatus\" onChange={(event) => this.handleApplicationEdit(event, 'currentApplicationStatus')} value={this.state.currentApplication.currentApplicationStatus}>\n                <option value=\"Applied\">Applied</option>\n                <option value=\"Under Review\">Under Review</option>\n                <option value=\"Interview\">Interview</option>\n                <option value=\"Job Offer\">Job Offer</option>\n                <option value=\"Rejected\">Rejected</option>\n                <option value=\"Offer Accepted\">Offer Accepted</option>\n            </select>\n        )\n\n        const editableArea = (\n            <div className=\"editableArea-container\">\n                <div className=\"editable-content\">\n                    <div className=\"icon-update\" onClick={() => this.handleApplicationClick('update')}><img src={updateIcon} title=\"sync changes\" alt=\"sync changes\"/></div>\n                    <div className=\"editable-form\">\n                        <p>Company Name: </p><input type=\"text\" placeholder=\"Google\" onChange={(event) => this.handleApplicationEdit(event, 'companyName')} value={this.state.currentApplication.companyName} />\n                        <p>Date Appied: </p><input type=\"text\" placeholder=\"Jan 11, 2019\" onChange={(event) => this.handleApplicationEdit(event, 'dateApplied')} value={this.state.currentApplication.dateApplied} />\n                        <p>Current Application Status: </p> {selectStatusArea}\n                        <p>Last Update: </p><input type=\"text\" placeholder=\"Jan 15, 2019\" onChange={(event) => this.handleApplicationEdit(event, 'lastUpdate')} value={this.state.currentApplication.lastUpdate} />\n                        <p>Remove: </p><input type=\"text\" onChange={(event) => this.handleApplicationEdit(event, 'remove')} value={this.state.removeInput}/>\n                    </div>\n                    <span className=\"hint\">* to remove the application please type the companie's name (case sensitive)</span>\n                </div>\n            </div>\n        )\n\n        const mainContent = (\n                <div className=\"application-block\">\n                    <div onClick={() => this.handleApplicationClick('companyName')}>\n                        <p>{this.state.currentApplication.companyName}</p>\n                    </div>\n                    <div onClick={() => this.handleApplicationClick('dateApplied')}>\n                        <p>{this.state.currentApplication.dateApplied}</p>\n                    </div>\n                    <div onClick={() => this.handleApplicationClick('currentApplicationStatus')}>\n                        <p>{this.state.currentApplication.currentApplicationStatus}</p>\n                    </div>\n                    <div onClick={() => this.handleApplicationClick('lastUpdate')}>\n                        <p>{this.state.currentApplication.lastUpdate}</p>\n                    </div>\n                    <div onClick={() => this.handleApplicationClick('editable')}>\n                        <img className=\"edit-icon\" src={editIcon} />\n                    </div>\n                </div>\n                )\n\n        return (\n            <div>\n                {this.state.editable ? editableArea : this.state.currentApplication.companyName ? mainContent : null}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      deleteApplication: application => dispatch(deleteApplication(application)),\n      updateApplication: options => dispatch(updateApplication(options))\n    };\n  }\n\nexport default connect(null, mapDispatchToProps)(ApplicationList);","import { ADD_APPLICATION, DATA_LOADED, DELETE_APPLICATION, UPDATE_APPLICATION } from './types'\nimport axios from 'axios'\n\nexport function addApplication(payload) {\n  return function(dispatch) {\n    axios.post(`http://localhost:5000/api/applications/new`, payload)\n          .then(function (response) {\n            if (response.data.message === \"success\") {\n              return dispatch({ type: ADD_APPLICATION, payload: response.data.applications })\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n  }\n};\n\nexport function getAllApplications(userID) {\n  return function(dispatch) {\n    return axios.get(`http://localhost:5000/api/applications/all/${userID}`)\n          .then(function (response) {\n            return dispatch({ type: DATA_LOADED, payload: response.data.applications })\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n  }\n};\n\nexport function deleteApplication(idsToDelete) {\n  const applicationID = idsToDelete.applicationID\n  const userID = idsToDelete.userID\n  return function(dispatch) {\n    axios.delete(`http://localhost:5000/api/applications/delete/${userID}/${applicationID}`)\n            .then(function (response) {\n              if (response.data.message === \"success\") {\n                return dispatch({ type: DELETE_APPLICATION, payload: response.data.removedID })\n              }\n            })\n            .catch(function (error) {\n              console.log(error)\n            })\n  }\n}\n\nexport function updateApplication(options) {\n  const applicationID = options.applicationID;\n  const userID = options.userID;\n  const newApplication = options.application\n\n  return function(dispatch) {\n    axios.put(`http://localhost:5000/api/applications/update/${userID}/${applicationID}`, newApplication)\n        .then((response) => {\n          console.log(response)\n          // if (response.data.message === \"success\") {\n          //   return dispatch({ type: DELETE_APPLICATION, payload: response.data.removedID })\n          // }\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n  }\n}","import React from 'react'\n\n// styles\nimport './ListHead.css';\n\nconst ListHead = () => (\n<div className=\"list-head\">\n    <div>\n        <p>Company Name</p>\n    </div>\n    <div>\n        <p>Date Applied</p>\n    </div>\n    <div>\n        <p>Application Status</p>\n    </div>\n    <div className=\"\">\n        <p>Last Update</p>\n    </div>\n    <div>\n        <p>Edit</p>\n    </div>\n</div>\n)\n\nexport default ListHead;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { getAllApplications } from '../../state/actions/applicationActions'\n// \nimport ApplicationList from '../applicationList/applicationList';\nimport ListHead from '../ListHead/ListHead';\nimport addIcon from '../../assests/add-button.svg';\n\n// styles\nimport './TrackHub.css';\n\nclass TrackHub extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            applications: [],\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        const userID = this.props.auth.user.id\n        this.props.getAllApplications(userID).then(data => {\n            if (data.payload){\n                data.payload.map(el => {\n                    if (el._id && el.companyName && el.currentApplicationStatus && el.dateApplied && el.lastUpdate) {\n                        const joined = this.state.applications.concat(el);\n                        this.setState({ applications: joined })\n                    }\n                })\n                this.setState({loading: false})\n            } \n        })\n      }\n\n    render() {\n        const addNewButton = (\n            <div className=\"add-new\">\n                <div className=\"add-icon-container\">\n                    <img src={addIcon} className=\"add-icon\" />\n                </div>\n                <p>Add New Application</p>\n            </div>\n        )\n\n        const appList = (\n            <ul className=\"application-list\">\n                <li><ListHead /></li>\n                {this.state.applications.map(el => (\n                    <li key={el._id} ><ApplicationList userID={this.props.auth.user.id} application={el} /></li>\n                ))}\n                    <li><Link to=\"/track-hub/new\">{addNewButton}</Link></li>\n            </ul>\n        );\n\n        return (\n            <div className=\"track-hub\">\n                {this.state.loading ? <h3>loading ...</h3> : appList}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        applications: state.applications,\n        auth: state.auth\n     };\n};\n\nexport default connect(mapStateToProps, {getAllApplications})(TrackHub);","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { addApplication } from '../../state/actions/applicationActions'\nimport uuidv1 from 'uuid'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nimport saveIcon from '../../assests/paper-plane.svg';\nimport closeIcon from '../../assests/error.svg';\nimport './NewApplication.css';\n\nclass NewApplication extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newApplication: {\n                userID: '',\n                companyName: '',\n                dateApplied: '',\n                lastUpdate: '',\n                currentApplicationStatus: 'Applied',\n            },\n        }\n    }\n\n    handleNewApplication(event, action) {\n        const newValue = event.target.value\n\n        switch (action) {\n            case 'companyName':\n                this.setState({ newApplication: { ...this.state.newApplication, companyName: newValue} });\n                break;\n            case 'currentApplicationStatus':\n                this.setState({ newApplication: { ...this.state.newApplication, currentApplicationStatus: newValue} });\n                break;\n            case 'dateApplied':\n                this.setState({ newApplication: { ...this.state.newApplication, dateApplied: newValue} });\n                break;\n            case 'lastUpdate':\n                this.setState({ newApplication: { ...this.state.newApplication, lastUpdate: newValue} });\n                break;\n        }\n    }\n\n    save() {\n        const newApplication = Object.assign({}, this.state.newApplication, {userID: this.props.auth.user.id});\n        this.props.addApplication(newApplication);\n        this.props.history.push('/track-hub');\n    }\n\n    close() {\n        this.props.history.push('/track-hub')\n    }\n\n    render() {\n        const selectStatusArea = (\n            <select className=\"applicationStatus\" name=\"applicationStatus\" onChange={(event) => this.handleNewApplication(event, 'currentApplicationStatus')}>\n                <option value=\"Applied\">Applied</option>\n                <option value=\"Under Review\">Under Review</option>\n                <option value=\"Interview\">Interview</option>\n                <option value=\"Job Offer\">Job Offer</option>\n                <option value=\"Rejected\">Rejected</option>\n                <option value=\"Offer Accepted\">Offer Accepted</option>\n            </select>\n        )\n\n        const icons = (\n            <div className=\"icons-container\">\n                <div className=\"icon-save\" onClick={() => this.save()}>\n                    <img src={saveIcon} />\n                </div>\n                <div className=\"icon-close\" onClick={() => this.close()}>\n                    <img src={closeIcon} />\n                </div>\n            </div>\n        )\n\n        const newApplicationArea = (\n            <div className=\"editableArea-container\">\n            <div className=\"editable-content\">\n                {icons}\n                <div className=\"editable-form\">\n                <p>Company Name: </p><input type=\"text\" placeholder=\"Google\" onChange={(event) => this.handleNewApplication(event, 'companyName')} value={this.state.newApplication.companyName} />\n                <p>Date Appied: </p><input type=\"text\" placeholder=\"Jan 11, 2019\" onChange={(event) => this.handleNewApplication(event, 'dateApplied')} value={this.state.newApplication.dateApplied} />\n                <p>Current Application Status: </p> {selectStatusArea}\n                <p>Last Update: </p><input type=\"text\" placeholder=\"Jan 15, 2019\" onChange={(event) => this.handleNewApplication(event, 'lastUpdate')} value={this.state.newApplication.lastUpdate} />\n                </div>\n            </div>\n        </div>\n        )\n\n        return (\n            <div>\n                {newApplicationArea}\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      addApplication: application => dispatch(addApplication(application))\n    };\n  }\n\n  const mapStateToProps = state => {\n    return { \n        auth: state.auth\n     };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApplication);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport jwt_decode from \"jwt-decode\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport store from './state/store.js';\nimport { setCurrentUser, logoutUser } from \"./state/actions/authActions\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport TrackHub from \"./components/TrackHub/TrackHub\";\nimport NewApplication from \"./components/NewApplication/NewApplication\";\n\n// Styles\nimport './App.css';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n              <Navbar />\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Switch>\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                <PrivateRoute exact path=\"/track-hub\" component={TrackHub} />\n                <PrivateRoute exact path=\"/track-hub/new\" component={NewApplication} />\n              </Switch>\n          </div>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n// styles\nimport './index.css';\n\n\nrender(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.cb499d5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-button.8821e4bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/paper-plane.2c0cb899.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.35a6ccb5.svg\";"],"sourceRoot":""}